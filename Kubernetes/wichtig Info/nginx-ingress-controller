Elbette! İşte AWS EKS üzerinde Nginx Ingress Controller'ı kullanmak için basit bir örnek YAML dosyası:

1. Nginx Ingress Controller'ı yüklemek için `nginx-ingress-controller.yaml` dosyasını oluşturun:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ingress-controller
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
    spec:
      containers:
        - name: nginx-ingress-controller
          image: k8s.gcr.io/ingress-nginx/controller:v1.0.3  # Nginx Ingress Controller'ın Docker imajı
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
```

2. Service türünde bir Kubernetes servisi oluşturun ve Load Balancer ile dış dünya iletişimini sağlayın. Bunun için `nginx-ingress-service.yaml` dosyasını oluşturun:

```yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-service
  namespace: kube-system
spec:
  type: LoadBalancer
  selector:
    app: nginx-ingress-controller
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
```

3. Ingress kaynağı oluşturun. Örneğin, `sample-ingress.yaml` dosyasını oluşturun:

```yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: example.com  # Bu, gelen trafiği yönlendireceğiniz alan adını belirtir
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sample-app  # Hedef servisin adı
                port:
                  number: 80  # Hedef servisin port numarası
```

Yukarıdaki YAML dosyalarını sırasıyla uyguladığınızda (örneğin `kubectl apply -f dosya-adı.yaml` komutu ile), AWS EKS kümelenizde Nginx Ingress Controller'ı ve sample-ingress ile yönlendirilecek bir hedef servis oluşturmuş olursunuz. Daha sonra, sample-ingress ile belirttiğiniz alan adına gelen istekler Nginx Ingress Controller aracılığıyla sample-app adlı hedef servise yönlendirilecektir.
